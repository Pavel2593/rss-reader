Тестовое задание: RSS Reader.


Задание заключается в написании SPA (Single Page Application)-приложения читалки RSS. Пользователь может добавлять ленты, имея лишь ссылки. К примеру, 
http://habrahabr.ru/rss . Все ленты объединяются в группы. Сущность ленты можно удалять/редактировать, а сущность группы только удалять (если в ней нет никаких лент). Все данные о группах и лентах хранятся в localStorage браузера.


Используемые технологии:
1. HTML + CSS + JS
2. MVC фреймворк AngularJS 1.x версии
3. Любая библиотека CSS, ускоряющая верстку
4. JS-плагины, ТОЛЬКО ДЛЯ внешнего вида(например кастомные скроллбары). Весь функционал должен быть на AngularJS.
4. Мини бекенд приложение, которое будет загружать rss.xml сайта, и возвращать ее в удобном виде для ангуляр-приложения. Язык и вспомогательный фреймворк может быть любым (Python, Node.js, Php, Asp.NET, ...)


Что должно быть реализовано:
1. Сверстать по дизайну, который прилагается в скриншот файле RSS Reader.png.
2. Вся информация должна храниться в локальном хранилище браузера (НЕ ИСПОЛЬЗОВАТЬ базы данных и бекенд для этого)
3. Возможность создавать группы лент. У каждой группы можно задавать имя и цветной маркер. Группу можно удалить, если в ней нет лент. В противном случае должно выводиться сообщение об ошибке.
4. Возможность добавлять ленты. Каждой ленте при создании задается имя, ссылка на rss и группа. Эти параметры можно редактировать, т.е. можно например переместить таким образом ленту из одной группы в другую.
5. При клике по ленте в списке - должно происходить общение с бекендом, а именно вытаскивание данных о последних новостях. Полученные данные нужно отобразить в списке в удобной форме (как в скриншотах).
6. Текст новости должен быть по умолчанию скрыт за кнопкой "Читать описание".
7. Каждая новость имеет 2 состояния: "прочитано" и "не прочитано". Когда пользователь нажимает на "Читать описание" - новость должна отмечаться, как прочитанная и информация об этом должна сохраняться даже после закрытия-открытия вкладки приложения.
8. Поиск по заголовкам новостей. Фильтрация новостей в списке должна происходить мгновенно, по набору поискового запроса. Грубо говоря, набрал новую букву -> запрос изменился -> в списке остались только подходящие новости. Никаких кнопок "Поиск" или поиска по нажатию Enter быть не должно.
9. Все кнопочки-иконки по удалению и редактированию должны быть по умолчанию скрыты и проявляться только по наведению на группу или ленту.
10. На форме добавления должна быть валидация, которая не допускает добавления ленты с некорректными данными (например без группы или другого поля)


Все неучтенные мелочи в задании должны решаться самостоятельно. Главное, чтобы было в итоге удобно и приятно пользоваться этой читалкой. Поведение элементов должно быть предсказуемым. В архиве с заданием лежат вспомогательные файлы (шрифты, изображения и скриншоты с подсказками).


Дополнительное задание (не обязательно, но будет хорошим плюсом):

1. В задании предлагается сделать форму добавления ленты в простом лайтбоксе (все затемняется, и по центру в окошке вылазит форма). Придумать другое оформление формы, чтобы было не менее удобно и красиво.
2. Любые другие плюшки, которые придут в голову и которые захочется реализовать. Главное требование - реализация с помощью ангуляра.